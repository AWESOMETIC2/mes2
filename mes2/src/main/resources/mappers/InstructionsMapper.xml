<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- InstructionsMapper.xml -->
  
<mapper namespace="com.mes2.mapper.InstructionsMapper">

	<resultMap type="com.mes2.production.domain.InstructionsDTO" id="instructionsDTOMap">
		<result property="code" column="code"/>
		<result property="line" column="line"/>
		<result property="mdpCode" column="mdp_code"/>
		<result property="type" column="type"/>
		<result property="sopCode" column="sop_code"/>
		<result property="dueDate" column="due_date"/>
		<result property="startTime" column="start_time"/>
		<result property="endTime" column="end_time"/>
		<result property="empNum" column="emp_id"/>
		<result property="state" column="state"/>
		<result property="quantity" column="quantity"/>
		<result property="fault" column="fault"/>
	</resultMap>
	

	
	<insert id ="insertInstructionForStandBy">
		insert into instructions
		(code, line, mdp_code, type, sop_code, due_date, state)
		values (#{code},#{line},#{mdpCode},#{type},#{sopCode},#{dueDate}, #{state})
	</insert>
	
	<select id="selectByCode" resultMap="instructionsDTOMap" parameterType="String">
		select *
		from instructions iss 
		join sales_order_product sop 
		on iss.sop_code = sop.sales_code 
		where code = #{value}
	</select>
	
	<update id="updateState">
		update instructions
		set state=#{state}
		where code = #{code}
	</update>
	
	<!-- 작업지시 시작 -->
	<update id="updateStart">
		update instructions
		set start_time = now(), state = 'start', emp_id = #{empNum}
		where code = #{code}
	</update>
	
	<!-- 작업지시 종료 -->
	<update id="updateComplete">
		update instructions
		set end_time = now(), state = 'COMPLETE', quantity = #{quantity}, fault = #{fault}
		where code = #{code}
	</update>
	
	<select id="selectBySearchParamCode" resultMap="instructionsDTOMap">
		select * 
		from instructions 
		<where>
		
            <if test="code !=null and !code.equals('')">
               <![CDATA[
               	and code like concat('%',#{code},'%')
               ]]>    
            </if>
<!-- 
            <if test="startTime != null and endTime != null ">
                AND start_time between #{startTime} AND #{endTime}
            </if>	
            
            <if test="startTime != null  and endTime = null ">
                <![CDATA[ AND start_time > #{startTime}]]>
            </if>	

			<if test="startTime = null  and endTime != null ">
                <![CDATA[ AND end_time < #{endTime} ]]>
            </if>
             -->
         </where>
	</select>

	<select id="selectBySearchParamSoiCode"  resultType="com.mes2.production.domain.InstructionsDTO">
		select * 
		from instructions 
		<where>
            <if test="code !=null and !code.equals('')">
                and code like concat('%',#{code},'%')
            </if>
            
            <if test="state !=null and !state.equals('')">
                and state = #{state}
            </if>
           
            <if test="startTime != null  and endTime != null ">
               <![CDATA[ 
               AND start_time BETWEEN #{startTime} AND #{endTime} && end_time BETWEEN #{startTime} AND #{endTime}
            	]]>
            </if>	
            
            <if test="startTime != null  and endTime = null ">
                <![CDATA[ AND start_time > #{startTime}]]>
            </if>	

			<if test="startTime = null  and endTime != null ">
                <![CDATA[ AND end_time < #{endTime} ]]>
            </if>
         </where>
	</select>
	
	<select id="selectBySearchParamMdpCode"  resultType="com.mes2.production.domain.InstructionsDTO">
		select * 
		from instructions 
		<where>
            <if test="code !=null and !code.equals('')">
                and mdp_code like concat('%',#{code},'%')
            </if>
            
            <if test="state !=null and !state.equals('')">
                and state = #{state}
            </if>
           
            <if test="startTime != null  and endTime != null ">
             	<![CDATA[
                AND start_time BETWEEN #{startTime} AND #{endTime} && end_time BETWEEN #{startTime} AND #{endTime}
            	]]>
            </if>	
            
            <if test="startTime != null  and endTime = null ">
                <![CDATA[ AND start_time > #{startTime}]]>
            </if>	

			<if test="startTime = null  and endTime != null ">
                <![CDATA[ AND end_time < #{endTime} ]]>
            </if>
         </where>
	</select>
	
	<select id="getLastInstructionsCode" parameterType="String" resultType="String">
		<![CDATA[
		select max(code)
		from instructions
		where code like concat (#{searchIsCode}, '%')
		]]>
	</select>
	
	<select id="selectByType" resultMap="instructionsDTOMap">
		select *
		from instructions
		where state = #{type}
	</select>
	
	<select id="selectByStateAndDueTime" resultMap="instructionsDTOMap">
		select *
		from instructions iss 
		join sales_order_product sop 
		on iss.sop_code = sop.sales_code 
		where state = #{state} and due_date between #{startDate} and #{endDate} 
	</select>
	
		

</mapper>