<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mes2.mapper.MaterialsMapper">

	<!-- 테이블 데이터 매핑 -->
  <resultMap id="InDTO" type="com.mes2.materials.domain.InDTO">
		<result property="in_code" column="in_code" />
		<result property="in_regdate" column="in_regdate" />
		<result property="product_code" column="product_code" />
		<result property="quantity" column="quantity" />
		<result property="unit" column="unit" />
		<result property="pd_lot" column="pd_lot" />
		<result property="category" column="category" />
		<result property="name" column="name" />
		<result property="cost" column="cost" />
		<result property="user_id" column="user_id" />
		<result property="unit" column="unit" />
	</resultMap>


	<!-- 자재 신청 -->
	<insert id="addPurchase"> INSERT INTO material_order (product_code,
		category,
		name, cost, quantity, orders_code, user_id) VALUES (#{product_code},
		#{category},#{name}, #{cost}, #{quantity}, SUBSTR(CONCAT_WS('-',
		(SELECT
		code_group FROM common_code WHERE code_group_name = '발주'),
		#{product_code}),
		1, 20), #{user_id})
	</insert>

	<!-- 자재 전체 리스트 -->
	<select id="listPurchase"
		resultType="com.mes2.materials.domain.PurchaseDTO">
		select * from material_order
	</select>

	<!-- 자재 상태 변경 업데이트 -->
	<update id="updateOrderStatus">
		UPDATE material_order SET status = #{status} WHERE
		product_code =#{product_code}
	</update>

	<!-- 상태 변경된 자재 리스트 불러오기 -->
	<select id="getStatus" parameterType="String"
		resultType="com.mes2.materials.domain.PurchaseDTO">
		SELECT status FROM material_order WHERE product_code =
		#{product_code}
	</select>

	<!-- 발주 수량 stock 업데이트 -->
	<update id="PurchaseupdateQuantity"
		parameterType="java.util.Map">
      <![CDATA[
        UPDATE stock
        SET quantity = quantity + #{quantity}
        WHERE product_code = #{product_code}
        AND category = #{category}
    ]]>
	</update>


	<!-- 발주 글 목록 조회(page) -->
	<select id="PurchaselistPage"
		resultType="com.mes2.materials.domain.PurchaseDTO">
		select * from material_order
		<!-- order by bno desc,regdate desc -->
		<!-- limit #{page},#{pageSize} -->
		limit #{startPage},#{pageSize}
	</select>

	<!-- 발주 전체 글 개수 조회 -->
	<select id="PurchaseCount" resultType="int">
  	  <![CDATA[
	  	  select count(*) from material_order 
	  	  where orders_code > 0  
   	  ]]>
	</select>









	<!-- 입고 신청 -->
	<insert id="addIn">
		INSERT INTO in_warehouse (in_code, product_code, quantity, user_id)
		VALUES (SUBSTR(CONCAT_WS('-', (SELECT code_group FROM common_code
		WHERE code_group_name = '입고'), #{product_code}), 1, 20),
		#{product_code},
		#{quantity},
		#{user_id})
	</insert>

	<!-- stock 테이블 추가 업데이트 -->
	<update id="addStock">
	     <![CDATA[
        UPDATE stock
        SET quantity = quantity + #{quantity}
        WHERE product_code = #{product_code}
        AND category = #{category}
    ]]>
	</update>


	<!-- 입고 전체 리스트 -->
	<select id="getInList" 
		resultType="com.mes2.materials.domain.InDTO" resultMap="InDTO">
	select iw.in_code, mdp.name, mdp.product_code, mdp.cost, mdp.category, iw.pd_lot, iw.quantity, mdp.unit, in_regdate, user_id 
from in_warehouse iw join meta_data_product mdp on mdp.product_code = iw.product_code
	</select>


	<!-- 입고 수량 업데이트 -->
	<update id="InupdateQuantity" parameterType="java.util.Map">
      <![CDATA[
        UPDATE stock
        SET quantity = quantity + #{quantity}
        WHERE product_code = #{product_code}
        AND category = #{category}
    ]]>
	</update>

	<!-- 입고 글 목록 조회(page) -->
	<select id="InlistPage"
		resultType="com.mes2.materials.domain.InDTO">
		select * from in_warehouse
		<!-- order by bno desc,regdate desc -->
		<!-- limit #{page},#{pageSize} -->
		limit #{startPage},#{pageSize}
	</select>

	<!-- 입고 전체 글 개수 조회 -->
	<select id="InCount" resultType="int">
  	  <![CDATA[
	  	  select count(*) from in_warehouse 
	  	  where in_index > 0  
   	  ]]>
	</select>








	<!-- 출고 신청 폼에 수주 출고 상태 업데이트 같이 해줘야 함 -->
	<!-- 수주 출고 신청 -->
	<!-- <insert id="addOut"> INSERT INTO out_warehouse (out_code, product_code, 
		order_code, category, name, quantity, user_id) VALUES ( SUBSTR(CONCAT_WS('-', 
		(SELECT code_group FROM common_code WHERE code_group_name = '출고'), #{product_code}, 
		#{order_code}), 1, 50), #{product_code}, #{order_code}, #{category}, #{name}, 
		#{quantity}, #{user_id} ) </insert> -->


	<!-- 수주 출고 -->
	<update id="updateOut">
		UPDATE out_warehouse
		SET
		out_code = SUBSTR(CONCAT_WS('-',
		(SELECT
		code_group FROM common_code WHERE code_group_name = '출고'),
		#{product_code},
		#{order_code}),
		1, 50),<!-- product_code = #{product_code}, 
			order_code = #{order_code}, -->
		category = #{category},
		name = #{name},
		quantity = #{quantity},
		user_id =
		#{user_id}
		WHERE
		out_code =#{out_code} and category =#{category}
	</update>



	<!-- 수주 출고 -->
	<update id="SalesOut" parameterType="java.util.Map">
	 <![CDATA[
		UPDATE out_warehouse
		SET out_code = SUBSTR(CONCAT_WS('-', (SELECT code_group FROM common_code
		WHERE code_group_name = '출고'), order_code), 1, 20),
		status = 'complete'
		WHERE out_type = 'S'
		AND order_code = #{order_code}
		 ]]>
	</update>


	<!-- 수주 상태 업데이트 -->
	<update id="SalesUpdate" parameterType="java.util.Map">
      <![CDATA[
        UPDATE sales_order_product
        SET product_status = #{product_status}
        WHERE product_code = #{product_code}
    ]]>
	</update>






	<!-- 출고 전체 리스트 -->
	<select id="getOutList"
		resultType="com.mes2.materials.domain.OutDTO">
		SELECT * FROM out_warehouse
	</select>


	<!-- 출고 다른 테이블에 수량 업데이트 -->
	<update id="OutupdateQuantity" parameterType="java.util.Map">
      <![CDATA[
        UPDATE meta_data_product
        SET quantity = quantity - #{quantity}
        WHERE product_code = #{product_code}
        AND category = #{category}
    ]]>
	</update>


</mapper>
