<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.mes2.mapper.SalesMapper">
  
  <resultMap id="SalesDTO" type="com.mes2.sales.domain.SalesDTO">
  	<result property="order_code" column="order_code"/>
  	<result property="company_name" column="company_name"/> 
  	<result property="product_name" column="name"/>
  	<result property="order_date" column="order_date"/>
  	<result property="request_date" column="request_date"/> 
  	<result property="product_code" column="product_code"/>
  	<result property="sales_quantity" column="sales_quantity"/>
  	<result property="user_id" column="user_id"/>
  	<result property="sales_code" column="sales_code"/>
  	<result property="product_status" column="product_status"/>
  	<result property="processing_reg" column="processing_reg"/>
  	<result property="stock_quantity" column="stock_quantity"/>
  </resultMap>
  
   <sql id="searchDate">
    <choose>
        <when test="startDay != null and endDay != null">
            and I.request_date between #{startDay} and #{endDay}
        </when>
        <when test="startDay != null and endDay == null">
            and I.request_date = #{startDay}
        </when>
        <when test="startDay == null and endDay != null">
            and I.request_date between now() and #{endDay}
        </when>  
    </choose>
  </sql>
  
  <sql id="salesJoin">
    from  sales_order_info I 
	join meta_data_business B 
	on I.company_code = B.company_code 
	join sales_order_product P 
	on I.order_code = P.order_code 
	left join meta_data_product M 
	on M.product_code = P.product_code 
  </sql>
  
  <sql id="salesGroup">
  group by I.order_code, B.name, I.order_date, I.request_date
  </sql>
  
  <sql id="searchList">
	<if test="type == 'order_code'">
	    where I.order_code like concat('%',#{search},'%')
	    <include refid="searchDate"/>
	</if>	
  	<if test="type == 'company_name'">
  	where B.name like concat('%',#{search},'%') 
  	<include refid="searchDate"/> 
  	</if>  	
  	<if test="type == 'order_date'">
  	where I.order_date between #{startDay} and #{endDay} 
  	</if> 	
  	<if test="type == 'request_date'">
  	where I.request_date between #{startDay} and #{endDay}
  	</if>
  </sql>
  
 
  
   <select id="getSalesList" resultMap="SalesDTO" >
    select I.order_code, B.name AS company_name ,I.order_date, I.request_date 
     <include refid="salesJoin"/> 
     <where>
     I.sales_status = #{sales_status}
     </where>
     <include refid="salesGroup"/>
    order by I.request_date ASC
  </select>
  
    <select id="getPlanContent"  resultMap="SalesDTO">
    select P.product_code , M.name  , P.sales_quantity ,I.order_code 
    <include refid="salesJoin"/>
    <where>
    I.order_code = #{order_code} and sales_status = 'requested' 
    </where>
    </select>
    
    <update id="rejectSales">
    update sales_order_info 
    set sales_status = 'reject' 
    where order_code in 
     <foreach collection="list" item="code" open="(" close=")" separator=",">
        #{code}
    </foreach>
    </update>
    
    <select id="getStockQuantity"  resultMap="SalesDTO">
	 select sum(quantity) as stock_quantity, product_code, name 
	 from meta_data_product 
	 where product_code = #{product_code} 
    </select>
    
    
 <select id="planSearch"  resultMap="SalesDTO" >
    select I.order_code, B.name AS company_name, I.order_date, 
    I.request_date 
    <include refid="salesJoin"/>
    <include refid="searchList"/>
    and sales_status = #{sales_status} 
    <include refid="salesGroup"/>
    order by I.request_date ASC
  </select>
  



  <update id="registerPlan">
  update sales_order_info 
  set sales_status = 'accept', 
  user_id = #{user_id} 
  where order_code in 
  <foreach collection="order_code" item="code" open="(" close=")" separator=",">
        #{code}
    </foreach>
  </update>
  
  <select id="getProdctCode"  resultMap="SalesDTO" >
  select product_code, order_code from sales_order_product where order_code in 
  <foreach collection="list" item="code" open="(" close=")" separator=",">
        #{code}
    </foreach>
  </select>
  
<update id="makeSalesCode">
    update sales_order_product P
    join sales_order_info I 
    on I.order_code = P.order_code 
    set P.sales_code = concat_ws('-',(select code_group from common_code where code_group_name='수주'), P.order_code, P.product_code,P.sales_quantity), 
    I.acceptance_date = now(),
    P.product_status = 'waiting'
    where (I.order_code, P.product_code) in
    <foreach collection="list" item="item"  open="(" close=")" separator=",">
        (#{item.order_code}, #{item.product_code})
    </foreach>
</update>


  
  <select id="checkRegPw" resultType="String">
  select user_pw from employees where user_id = #{user_id} 
  </select>
  
 
  
  <select id="getAcceptContent" resultMap="SalesDTO">
  select P.sales_code, M.name , P.sales_quantity, P.product_status,P.processing_reg, P.product_code , P.order_code
  <include refid="salesJoin"/>
  where P.order_code =#{order_code} 
  </select>
  
  <update id="updateAcceptStatus"> 
  update sales_order_product 
  set processing_reg =
    <foreach collection="processing_reg" item="reg" open="(" close=")" separator=",">
        #{reg}
    </foreach>
    where sales_code in 
     <foreach collection="sales_code" item="code" open="(" close=")" separator=",">
        #{code}
    </foreach>
  </update>
  
  <insert id="stockReg">
  insert into out_warehouse 
  (out_quantity,product_code,out_type,status,order_code) 
  values (#{stock_quantity}, #{product_code}, 'S','waiting',#{order_code})
  </insert>
  
  <update id='changeProductStatus'>
  update sales_order_product 
  set product_status = #{product_status}, 
  processing_reg = #{processing_reg} 
  where sales_code =#{sales_code}
  </update>
  
  <insert id="productInst">
  insert into instructions 
  (sop_code, sales_quantity, mdp_code, state) 
  values 
  (#{sales_code},#{lack_quantity},#{product_code},'requested') 
  </insert>
  
  <update id="updateStockQuan">
  update meta_data_product 
  set quantity = (quantity - #{stock_quantity}) 
  where product_code = #{product_code} 
  </update>
  
<insert id="insertShippingPlan" >
    insert into shipping (order_code, scheduled_date) 
    values (#{order_code}, #{scheduled_date}) 
</insert>

<select id="checkOrdeDate" resultType="java.util.Date">
	select order_date from sales_order_info 
	where order_code = #{order_code} 
</select>
  
  </mapper>